plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
}


group = 'com.cavbleu.kh'
version = '0.1.1'

java {
    sourceCompatibility = '17'
}


compileJava.options.encoding('UTF-8')

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    runtime.exclude group: "org.springframework.boot", module: "spring-boot-starter-aop"
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2022.0.4")
}

dependencies {

//    implementation project (":entityDTO")
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'


    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.keycloak:keycloak-admin-client:22.0.1'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

//    Это тут не нужно, некрасивое решение...
    implementation ('org.springframework.boot:spring-boot-starter-data-jpa') {
        exclude(group: 'org.springframework.boot', module : 'spring-boot-starter-aop')}
    runtimeOnly 'org.postgresql:postgresql'

    implementation 'org.xhtmlrenderer:flying-saucer-pdf:9.3.1'
    implementation 'org.jsoup:jsoup:1.17.1'
    implementation 'commons-io:commons-io:2.15.0'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
//    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
    useJUnitPlatform()
}
